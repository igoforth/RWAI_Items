<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <RootNamespace>$(ModFileName)</RootNamespace>
        <AssemblyName>$(ModFileName)</AssemblyName>
        <TargetFrameworks>net472</TargetFrameworks>
        <LangVersion>latest</LangVersion>
        <PlatformTarget>x64</PlatformTarget>
        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
        <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
        <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
        <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>
        <DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences>
        <Version>$(ModVersion)</Version>
        <AssemblyVersion>$(ModVersion)</AssemblyVersion>
        <FileVersion>$(ModVersion)</FileVersion>
        <PackageVersion>$(ModVersion)</PackageVersion>
        <InformationalVersion>$(ModVersion)</InformationalVersion>
        <Company>Trojan</Company>
        <Authors>Ian Goforth</Authors>
        <Copyright>Copyright Ian Goforth</Copyright>
        <PackageProjectUrl>$(Repository)</PackageProjectUrl>
        <RepositoryUrl>$(Repository)</RepositoryUrl>
        <Product>$(ModName)</Product>
        <ProjectGuid>{D25A1DAE-6452-456F-8CFF-FECC7EF1AFFB}</ProjectGuid>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
        <DefineConstants>RW15</DefineConstants>
        <DebugSymbols>false</DebugSymbols>
        <Optimize>true</Optimize>
        <DebugType>none</DebugType>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
        <DefineConstants>RW15;TRACE;DEBUG</DefineConstants>
        <DebugSymbols>true</DebugSymbols>
        <Optimize>false</Optimize>
        <DebugType>portable</DebugType>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    </PropertyGroup>

    <ItemGroup>
        <Content Include="..\Directory.Build.props">
            <Link>%(Filename)%(Extension)</Link>
        </Content>
        <Content Include="..\Defs\**\*.xml">
            <Link>Defs\%(RecursiveDir)%(Filename)%(Extension)</Link>
        </Content>
        <Content Include="..\Languages\**\Keyed\*.xml">
            <Link>Languages\%(RecursiveDir)%(FileName)%(Extension)</Link>
        </Content>
        <Content Include="..\Languages\**\DefInjected\**\*.xml">
            <Link>Languages\%(RecursiveDir)%(FileName)%(Extension)</Link>
        </Content>
    </ItemGroup>

    <ItemGroup Label="Runtime">
        <PackageReference Include="Krafs.Rimworld.Ref" Version="1.5.*" />
        <PackageReference Include="Lib.Harmony" Version="2.3.3" ExcludeAssets="runtime" />
        <PackageReference Include="Microsoft.NETCore.Portable.Compatibility" Version="1.0.1" />
    </ItemGroup>

    <ItemGroup Label="Development">
        <PackageReference Include="ILRepack" Version="2.0.33" GeneratePathProperty="true">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="Krafs.Publicizer" Version="2.2.1">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="PolySharp"
            Version="1.14.1+a7a92a9ddd050275c91c42b711d22cb41c3fbf3d">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
    </ItemGroup>

    <ItemGroup>
        <Reference Include="Newtonsoft.Json">
            <HintPath>..\Libraries\Newtonsoft.Json.dll</HintPath>
        </Reference>
        <Reference Include="netstandard">
            <Private>true</Private>
        </Reference>
    </ItemGroup>

    <ItemGroup>
        <Publicize Include="Assembly-CSharp;0Harmony" />
        <DoNotPublicize
            Include="0Harmony:System.Runtime.CompilerServices.IgnoresAccessChecksToAttribute" />
    </ItemGroup>

    <Target Name="CopyPublicized" AfterTargets="Build">
        <!-- Create an item list of DLLs found in subdirectories of the specified path -->
        <ItemGroup Condition="'$(Configuration)' == 'Release'">
            <CustomAssemblies
                Include="$(IntermediateOutputPath)PublicizedAssemblies\**\*.dll" />
        </ItemGroup>

        <!-- Copy all collected DLLs to the destination folder -->
        <Copy SourceFiles="@(CustomAssemblies)" DestinationFolder="$(OutputPath)\shared"
            SkipUnchangedFiles="true" />
    </Target>

    <Target Name="CheckConfiguration" BeforeTargets="Build">
        <Message Text="Configuration: $(Configuration)" Importance="high" />
    </Target>

    <Target Name="GatherInputs" AfterTargets="CopyPublicized">
        <PropertyGroup Label="ILRepackOutput" Condition="'$(Configuration)' == 'Release'">
            <ILRepackOutputPath>..\..\..\1.5\Assemblies\</ILRepackOutputPath>
        </PropertyGroup>
        <PropertyGroup Label="ILRepackItems">
            <ILRepackExe>$(PkgILRepack)\tools\ILRepack.exe</ILRepackExe>
            <ILRepackInputPrimary>$(AssemblyName).dll</ILRepackInputPrimary>
            <ILRepackOutput>$(ILRepackOutputPath)$(AssemblyName).dll</ILRepackOutput>
        </PropertyGroup>
        <ItemGroup Label="ILRepackLists">
            <ILRepackExtra Include="log;wildcards;parallel;target:library" />
            <ILRepackInput Include="$(OutputPath)\*.dll" />
            <ILRepackInput Remove="$(OutputPath)$(AssemblyName).dll" />
            <ILRepackLib Include="$(OutputPath)\shared" />
        </ItemGroup>
    </Target>

    <Target Name="Repack" AfterTargets="GatherInputs"
        Inputs="$(ILRepackExe);@(ILRepackInput);@(ILRepackLib);$(ILRepackOutputPath);$(ILRepackOutput)"
        Outputs="$(ILRepackOutput)"
        Condition="'$(Configuration)' == 'Release'">
        <PropertyGroup Label="ILRepackArguments">
            <ILRepackExtraArguments>@(ILRepackExtra->'/%(Identity)', ' ')</ILRepackExtraArguments>
            <ILRepackLibrariesArgument>@(ILRepackLib->'/lib:"%(FullPath)"', ' ')</ILRepackLibrariesArgument>
            <ILRepackOutArgument>/out:$(ILRepackOutput)</ILRepackOutArgument>
            <ILRepackInArgument>@(ILRepackInput->'"%(FileName)%(Extension)"', ' ')</ILRepackInArgument>
        </PropertyGroup>
        <Exec
            Command="$(ILRepackExe) $(ILRepackExtraArguments) $(ILRepackLibrariesArgument) $(ILRepackOutArgument) $(ILRepackInputPrimary) $(ILRepackInArgument)"
            WorkingDirectory="$(OutputPath)" ConsoleToMSBuild="True" />
        <Copy Condition="Exists('$(ProjectRuntimeConfigFilePath)')"
            SourceFiles="$(ProjectRuntimeConfigFilePath)"
            DestinationFiles="$(ILRepackOutputPath)$(ProjectRuntimeConfigFileName)"
            SkipUnchangedFiles="True" />
    </Target>

    <Target Name="PostBuildAction" AfterTargets="Repack">
        <XmlPoke XmlInputPath="$(MSBuildProjectDirectory)\..\About\About.xml"
            Query="//ModMetaData/modVersion" Value="$(ModVersion)" />
        <Message Text="New version: $(ModVersion)" />
    </Target>

    <Target Name="CopyToRimWorld" AfterTargets="PostBuildAction" Condition="'$(MOD_PATH)' != ''">
        <RemoveDir Directories="$(MOD_PATH)\$(ModFileName)" />
        <ItemGroup>
            <CopyAbout Include="..\About\**" />
            <CopyAssemblies Include="..\Assemblies\**" />
            <CopyTextures Include="..\Textures\**" />
            <CopyLicense Include="..\LICENSE" />
            <CopyReadme Include="..\README.md" />
        </ItemGroup>
        <Copy SourceFiles="@(CopyAbout)"
            DestinationFolder="$(MOD_PATH)\$(ModFileName)\About\%(RecursiveDir)" />
        <Copy SourceFiles="@(CopyAssemblies)"
            DestinationFolder="$(MOD_PATH)\$(ModFileName)\Assemblies\%(RecursiveDir)" />
        <Copy SourceFiles="@(CopyTextures)"
            DestinationFolder="$(MOD_PATH)\$(ModFileName)\Textures\%(RecursiveDir)" />
        <Copy SourceFiles="@(CopyLicense)" DestinationFolder="$(MOD_PATH)\$(ModFileName)" />
        <Copy SourceFiles="@(CopyReadme)" DestinationFolder="$(MOD_PATH)\$(ModFileName)" />
    </Target>

    <Target Name="ZipMod" AfterTargets="CopyToRimWorld" Condition="'$(MOD_PATH)' != ''">
        <ZipDirectory SourceDirectory="$(MOD_PATH)\$(ModFileName)"
            DestinationFile="$(MOD_PATH)\$(ModFileName).zip" Overwrite="true" />
    </Target>

</Project>