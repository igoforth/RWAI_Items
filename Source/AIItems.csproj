<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <RootNamespace>$(ModFileName)</RootNamespace>
    <AssemblyName>$(ModFileName)</AssemblyName>
    <TargetFramework>net472</TargetFramework>
    <LangVersion>latest</LangVersion>
    <PlatformTarget>x64</PlatformTarget>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <Version>$(ModVersion)</Version>
    <AssemblyVersion>$(ModVersion)</AssemblyVersion>
    <FileVersion>$(ModVersion)</FileVersion>
    <PackageVersion>$(ModVersion)</PackageVersion>
    <InformationalVersion>$(ModVersion)</InformationalVersion>
    <Company>Trojan</Company>
    <Authors>Ian Goforth</Authors>
    <Copyright>Copyright Ian Goforth</Copyright>
    <PackageProjectUrl>$(Repository)</PackageProjectUrl>
    <RepositoryUrl>$(Repository)</RepositoryUrl>
    <Product>$(ModName)</Product>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <DebugType>none</DebugType>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <DefineConstants>RW12;RW13;TRACE;DEBUG</DefineConstants>
    <Optimize>false</Optimize>
    <DebugType>portable</DebugType>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="..\Directory.Build.props">
      <Link>%(Filename)%(Extension)</Link>
    </Content>
    <Content Include="..\Defs\**\*.xml">
      <Link>Defs\%(RecursiveDir)%(Filename)%(Extension)</Link>
    </Content>
    <Content Include="..\Languages\**\Keyed\*.xml">
      <Link>Languages\%(RecursiveDir)%(FileName)%(Extension)</Link>
    </Content>
    <Content Include="..\Languages\**\DefInjected\**\*.xml">
      <Link>Languages\%(RecursiveDir)%(FileName)%(Extension)</Link>
    </Content>
  </ItemGroup>

  <ItemGroup Label="Runtime">
    <PackageReference Include="Krafs.Rimworld.Ref" Version="1.5.4085" GeneratePathProperty="true" />
    <PackageReference Include="Lib.Harmony" Version="2.3.3" ExcludeAssets="runtime" />
    <PackageReference Include="Microsoft.NETCore.Platforms" Version="7.0.4" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
  </ItemGroup>

  <ItemGroup Label="Development">
    <PackageReference Include="ILRepack" Version="2.0.33">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Krafs.Publicizer" Version="2.2.1">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies.net472" Version="1.0.3">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="PolySharp" Version="1.14.1+a7a92a9ddd050275c91c42b711d22cb41c3fbf3d">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <Publicize Include="Assembly-CSharp;0Harmony" />
    <DoNotPublicize
      Include="0Harmony:System.Runtime.CompilerServices.IgnoresAccessChecksToAttribute" />
  </ItemGroup>

  <Target Name="CopyPublicized" AfterTargets="Build">
    <!-- Create an item list of DLLs found in subdirectories of the specified path -->
    <ItemGroup>
      <CustomAssemblies
        Include="$(MSBuildProjectDirectory)\obj\Release\PublicizedAssemblies\**\*.dll" />
    </ItemGroup>

    <!-- Copy all collected DLLs to the destination folder -->
    <Copy SourceFiles="@(CustomAssemblies)" DestinationFolder="$(OutputPath)\shared"
      SkipUnchangedFiles="true" />
  </Target>

  <Target Name="GatherInputs" AfterTargets="CopyPublicized">
    <PropertyGroup Label="ILRepackItems">
      <ILRepackExe>$(PkgILRepack)\tools\ILRepack.exe</ILRepackExe>
      <ILRepackInputPrimary>$(AssemblyName).dll</ILRepackInputPrimary>
      <ILRepackOutputPath>..\..\..\Assemblies\</ILRepackOutputPath>
      <ILRepackOutput>$(ILRepackOutputPath)$(AssemblyName).dll</ILRepackOutput>
    </PropertyGroup>
    <ItemGroup Label="ILRepackLists">
      <ILRepackExtra Include="log;wildcards;parallel;target:library" />
      <ILRepackInput Include="$(OutputPath)\*.dll" />
      <ILRepackInput Remove="$(OutputPath)$(AssemblyName).dll" />
      <ILRepackLib Include="$(OutputPath)\shared" />
    </ItemGroup>
  </Target>

  <Target Name="Repack"
    AfterTargets="GatherInputs"
    Inputs="$(ILRepackExe);@(ILRepackInput);@(ILRepackLib);$(ILRepackOutputPath);$(ILRepackOutput)"
    Outputs="$(ILRepackOutput)"
    Condition="'$(Configuration)' == 'Release'">
    <PropertyGroup Label="ILRepackArguments">
      <ILRepackExtraArguments>@(ILRepackExtra->'/%(Identity)', ' ')</ILRepackExtraArguments>
      <ILRepackLibrariesArgument>@(ILRepackLib->'/lib:&quot;%(FullPath)&quot;', ' ')</ILRepackLibrariesArgument>
      <ILRepackOutArgument>/out:$(ILRepackOutput)</ILRepackOutArgument>
      <ILRepackInArgument>@(ILRepackInput->'&quot;%(FileName)%(Extension)&quot;', ' ')</ILRepackInArgument>
    </PropertyGroup>
    <Exec
      Command="$(ILRepackExe) $(ILRepackExtraArguments) $(ILRepackLibrariesArgument) $(ILRepackOutArgument) $(ILRepackInputPrimary) $(ILRepackInArgument)"
      WorkingDirectory="$(OutputPath)"
      ConsoleToMSBuild="True" />
    <Copy Condition="Exists('$(ProjectRuntimeConfigFilePath)')"
      SourceFiles="$(ProjectRuntimeConfigFilePath)"
      DestinationFiles="$(ILRepackOutputPath)$(ProjectRuntimeConfigFileName)"
      SkipUnchangedFiles="True" />
  </Target>

  <Target Name="PostBuildAction" AfterTargets="Repack">
    <XmlPoke XmlInputPath="$(MSBuildProjectDirectory)\..\About\About.xml"
      Query="//ModMetaData/modVersion" Value="$(ModVersion)" />
    <Message Text="New version: $(ModVersion)" />
  </Target>

  <Target Name="CopyToRimWorld" AfterTargets="PostBuildAction"
    Condition="'$(MOD_PATH)' != ''">
    <RemoveDir Directories="$(MOD_PATH)\$(ModFileName)" />
    <ItemGroup>
      <CopyAbout Include="..\About\**" />
      <CopyAssemblies Include="..\Assemblies\**" />
      <CopyLicense Include="..\LICENSE" />
      <CopyReadme Include="..\README.md" />
    </ItemGroup>
    <Copy SourceFiles="@(CopyAbout)"
      DestinationFolder="$(MOD_PATH)\$(ModFileName)\About\%(RecursiveDir)" />
    <Copy SourceFiles="@(CopyAssemblies)"
      DestinationFolder="$(MOD_PATH)\$(ModFileName)\Assemblies\%(RecursiveDir)" />
    <Copy SourceFiles="@(CopyLicense)" DestinationFolder="$(MOD_PATH)\$(ModFileName)" />
    <Copy SourceFiles="@(CopyReadme)" DestinationFolder="$(MOD_PATH)\$(ModFileName)" />
  </Target>

  <Target Name="ZipMod" AfterTargets="CopyToRimWorld"
    Condition="'$(MOD_PATH)' != ''">
    <ZipDirectory SourceDirectory="$(MOD_PATH)\$(ModFileName)"
      DestinationFile="$(MOD_PATH)\$(ModFileName).zip" Overwrite="true" />
  </Target>

</Project>